# Generated by Django 3.2.9 on 2022-04-06 10:08

from django.db import migrations


def migrate_reasearchers_and_roles(apps, schema_editor):
    o_r = apps.get_model('FinancialReporting', 'Researcher')
    n_r = apps.get_model('Projects', 'Researcher')
    o_role = apps.get_model('FinancialReporting', 'ResearcherRole')
    n_role = apps.get_model('Projects', 'ResearcherRole')

    # Cycle over researcher of old table
    for r in o_r.objects.all():
        # Create new researcher
        new = n_r()
        new.name = r.name
        new.surname = r.surname
        new.save()

        # Search corresponding roles
        for role in o_role.objects.filter(researcher=r):
            # Create new role
            new_role = n_role()
            new_role.researcher = new
            new_role.role = role.role
            new_role.start_date = role.start_date
            new_role.save()


def migrate_projects_and_wps(apps, schema_editor):
    o_prj = apps.get_model('FinancialReporting', 'Project')
    n_prj = apps.get_model('Projects', 'Project')
    o_wp = apps.get_model('FinancialReporting', 'WorkPackage')
    n_wp = apps.get_model('Projects', 'WorkPackage')

    for p in o_prj.objects.all():

        new_p = n_prj()
        for f in ['name', 'agency', 'reference']:
            setattr(new_p, f, getattr(p, f))
        new_p.save()

        for wp in o_wp.objects.filter(project=p):
            new_wp = n_wp()
            new_wp.project = new_p
            for f in ['name', 'desc']:
                setattr(new_wp, f, getattr(wp, f))
            new_wp.save()


class Migration(migrations.Migration):

    dependencies = [
        ('Projects', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(migrate_reasearchers_and_roles),
        migrations.RunPython(migrate_projects_and_wps),
    ]
